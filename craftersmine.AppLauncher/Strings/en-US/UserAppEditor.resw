<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvancedOptions.Header" xml:space="preserve">
    <value>Advanced parameters</value>
  </data>
  <data name="AppCoverRecommendationsTextBlock.Text" xml:space="preserve">
    <value>Recommended image aspect ratio: 2:3. Recommended image size: 600x900 pixels</value>
  </data>
  <data name="AppCoverTextBlock.Text" xml:space="preserve">
    <value>App cover image</value>
  </data>
  <data name="AppExecutableLabel.Text" xml:space="preserve">
    <value>App executable path</value>
  </data>
  <data name="AppExecutablePathBrowseButton.Content" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="AppExecutablePathTextBox.PlaceholderText" xml:space="preserve">
    <value>e.g. C:\Windows\notepad.exe</value>
  </data>
  <data name="AppExecutionInfoHeader.Text" xml:space="preserve">
    <value>App execution information</value>
  </data>
  <data name="AppInfoDescriptionLabel.Text" xml:space="preserve">
    <value>App description</value>
  </data>
  <data name="AppInfoDescriptionTextBox.PlaceholderText" xml:space="preserve">
    <value>(Optional) Enter an app description</value>
  </data>
  <data name="AppInfoHeader.Text" xml:space="preserve">
    <value>App information</value>
  </data>
  <data name="AppInfoNameLabel.Text" xml:space="preserve">
    <value>App name</value>
  </data>
  <data name="AppInfoNameTextBox.PlaceholderText" xml:space="preserve">
    <value>Enter an app name</value>
  </data>
  <data name="AppLaunchArgumentsLabel.Text" xml:space="preserve">
    <value>App launch arguments</value>
  </data>
  <data name="AppLaunchArgumentsTextBox.PlaceholderText" xml:space="preserve">
    <value>(Optional) Enter a launch arguments</value>
  </data>
  <data name="AppWorkingDirectoryBrowseButton.Content" xml:space="preserve">
    <value>Browse...</value>
  </data>
  <data name="AppWorkingDirectoryLabel.Text" xml:space="preserve">
    <value>App working directory</value>
  </data>
  <data name="AppWorkingDirectoryTextBox.PlaceholderText" xml:space="preserve">
    <value>(Optional) Enter an application working directory path</value>
  </data>
  <data name="CancelButton.Content" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ExecutablePicker_SelectAppButton" xml:space="preserve">
    <value>Select application</value>
  </data>
  <data name="ImagePicker_SelectImageButton" xml:space="preserve">
    <value>Select image</value>
  </data>
  <data name="NewAppDefaultName" xml:space="preserve">
    <value>New app</value>
  </data>
  <data name="PageHeaderTextBlock_Add" xml:space="preserve">
    <value>Add an app to library</value>
  </data>
  <data name="PageHeaderTextBlock_Edit.Text" xml:space="preserve">
    <value>Edit an app</value>
  </data>
  <data name="RunAsAdminCheckBoxText.Text" xml:space="preserve">
    <value>Run application as administrator</value>
  </data>
  <data name="SaveButtonText.Text" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="UnableToFindDirectoryDlg_Content" xml:space="preserve">
    <value>Unable to find directory in specified location. Check if directory exists in that location, fix path to directory or use folder picker and try again.</value>
  </data>
  <data name="UnableToFindExecutableDlg_Content" xml:space="preserve">
    <value>Unable to find executable in specified location. Check if executable exists in that location, fix path to executable or use executable picker and try again.</value>
  </data>
  <data name="UnableToFindExecutableOrDirectoryDlg_Title" xml:space="preserve">
    <value>Unable to find specified file or directory</value>
  </data>
  <data name="UnableToSaveApp_Content" xml:space="preserve">
    <value>Unable to save application list to storage due to unknown reason! Please try again.</value>
  </data>
  <data name="UnableToSaveApp_Title" xml:space="preserve">
    <value>Error while saving data!</value>
  </data>
  <data name="WorkingDirectoryPicker_SelectDirectoryButton" xml:space="preserve">
    <value>Select working directory</value>
  </data>
</root>